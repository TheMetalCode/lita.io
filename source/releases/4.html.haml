---
title: Lita 4.0
---

.container
  .page-header
    %h1 Lita 4.0

  .row
    .col-md-3= partial "releases/menu"
    .col-md-9
      .page-header.first-heading
        %h2 Release announcement

      %p Version 4.0 of Lita, the Ruby chat bot framework, has been released. It contains several new features and improvements for both users and plugin developers. If you're brand new to Lita, you can install it by running <code>gem install lita</code> and learn to use it on the <a href="/getting-started/">getting started</a> page. Otherwise, read on for all the changes in the latest version.

      %h3 Feature overview

      %ul
        %li New configuration system with support for data type validation, custom validations, and nested attributes.
        %li Rack middleware can now be added to the built-in web server.
        %li Handler plugins can be created without inheriting from <code>Lita::Handler</code> by using mixins for only the desired functionality.
        %li Handlers can manually set their Redis namespace, allowing complicated plugins to span across multiple classes while still sharing the same data store.
        %li Callbacks for chat routes, HTTP routes, and events can be supplied as a block or callable object rather than the name of an instance method to invoke.
        %li Both adapters and handlers can be created by passing a block to <code>Lita.register_adapter</code> and <code>Lita.register_handler</code>, respectively.
        %li Messages that don't match any handler routes will now trigger an <code>:unhandled_message</code> event.
        %li New RSpec matchers for all types of routes with authorization group support, improved syntax and additional functionality.
        %li Easily test HTTP routes with the new <code>http</code> helper method for RSpec.
        %li New authorization methods to make management and testing of authorization groups easier.
        %li Major refactoring to reduce reliance on global state, offering safer, more predictable programming and testing.
        %li Improved failure detection and messaging for Redis and the built-in web server.

      %h3 Upgrading for Lita users

      %p Lita 4 is completely backwards compatible for users. All existing functionality and plugins will continue to work. However, Lita 4 introduces a new configuration system, and a few things will need to change in your <code>lita_config.rb</code> file as the plugins you use begin to take advantage of features from Lita 4. Most configuration will remain unchanged, but a couple of attributes will emit deprecation warnings until they are updated to be compatible with the new style. These attributes are:

      %ul
        %li
          %p
            %strong config.adapter
          %p This attribute has been deprecated in favor of <code>config.adapters</code>, which has a separate attribute for each adapter by name, just as <code>config.handlers</code> does. At the time of Lita 4's release, all adapters will continue to read from the original <code>config.adapter</code> attribute, but once a version of the adapter you're using is released that uses the new system, you'll need to update your configuration accordingly.
          %p Example: Using the HipChat adapter, <code>config.adapter.jid = "12345_123456@chat.hipchat.com"</code> would become <code>config.adapters.hipchat.jid = "12345_123456@chat.hipchat.com"</code>.
        %li
          %p
            %strong config.redis
          %p The redis configuration attribute is now a hash. Lita 4 will continue to support struct-style access, but only hash-style access will be supported in Lita 5, so you should update now.
          %p Example: <code>config.redis.host = "redis.example.com"</code> will become <code>config.redis[:host] = "redis.example.com"</code>

      %h3 Upgrading for plugin developers
