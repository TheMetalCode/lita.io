---
title: "Getting Started: Usage"
---

.container
  .page-header
    %h1 Getting Started

  .row
    .col-md-3= partial "getting-started/menu"
    .col-md-9
      .page-header.first-heading
        %h2 Usage

      %p Once Lita is installed and configured, running it is simply a matter of running the shell command: <kbd>lita</kbd>

      %h3#shell-adapter Shell adapter

      %p Lita ships with one adapter for use directly in the shell. This is a great way to try it out without having to connect to a real chat service. Using the shell adapter, simply type text at the input to send messages, and Lita will respond according to any registered handlers.

      %p The shell adapter has one configuration attribute:

      %table.table.table-bordered
        %tr
          %th Name
          %th Type
          %th Description
          %th Default
        %tr
          %td
            %code config.adapters.shell.private_chat
          %td Boolean
          %td If true, all messages will be treated as though they were sent in a private chat, so they will be considered commands even when not prefixed with Lita's name.
          %td
            %code false

      %p The next section covers the distinction between "messages" and "commands".

      %h3#messages-and-commands Messages and commands

      %p Lita handlers can act on any message sent to it in a private message or that it overhears in a group chat room. Some handlers cause Lita to respond only when the matching phrase is a "command," which means that the message was sent to Lita privately, or it was specifically addressed to Lita in a public room. The following are all valid ways of addressing Lita:

      %pre
        %code
          :preserve
            You: Lita, do something
            You: Lita do something
            You: @Lita do something
            You: Lita: do something

      All of these will cause Lita to interpret the message as a command. Lita's name is also case insensitive. If the messages are sent privately, they are always considered commands and don't need to be prefixed with Lita's name.

      %h3#in-chat-help In-chat help

      %p Handler plugins register help information about the new features they add. You can find out what messages and commands Lita will respond to by sending it the message "help".

      %pre
        %code You: Lita help

      %p Lita will reply to you privately with a list of available messages and commands. In some cases, this list might be very large and you'll want to filter it down to messages and commands containing a certain phrase. You can do that by adding the phrase you want to filter by to the end of the command:

      %pre
        %code You: Lita help karma

      %p This will return messages and commands only if their help text contains the word "karma".

      %h3#basic-info Basic info

      %p Lita exposes some basic information about itself while it's running. To see the version of Lita that is currently running, use the <i>info</i> command.

      %pre
        %code
          :preserve
            You: Lita info
            Lita: Lita 4.0.0 - http://www.lita.io/
            Lita: Redis 2.8.12 - Memory used: 9.6M

      %p An HTTP route is also exposed, containing additional information.

      %pre
        %code
          :preserve
            $ curl -i http://lita.example.com/lita/info
            HTTP/1.1 200 OK
            Content-Type: application/json
            Content-Length: 90

            {"adapter":"shell","lita_version":"4.0.0","redis_memory_usage":"982.38K","redis_version":"2.8.17","robot_mention_name":"Lita","robot_name":"Lita"}

      %h3#managing-rooms Managing rooms

      %p The rooms Lita joins at start up time are defined in adapter-specific configuration. However, if you want to Lita to join a room temporarily while it's running, or leave a room it's joined, you can use the <i>join</i> and <i>part</i> commands.

      %pre
        %code
          :preserve
            You: Lita join #mychannel
            You: Lita part #mychannel

      .alert.alert-info
        %strong Note:
        These commands are an optional part of the adapter plugin interface and may not be implemented by every adapter.

      %h3#authorization-groups Authorization groups

      %p Handlers can restrict chat routes to certain users through the authorization groups feature. For example, certain commands in the <a href="https://github.com/jimmycuadra/lita-karma">karma</a> plugin require the user sending the message to be in the <code>:karma_admins</code> group.

      %p Authorization groups can be arbitrarily named, and are created and destroyed automatically when members are added and removed. To manage authorization groups, a user must be specified as an administrator via the <code>config.robot.admins</code> configuration attribute.

      %p To add a user to a group:

      %pre
        %code
          :preserve
             You: Lita auth add Joe karma_admins
            Lita: Joe was added to karma_admins.

      %p Similarly, to remove a user from a group:

      %pre
        %code
          :preserve
             You: Lita auth remove Joe karma_admins
            Lita: Joe was removed from karma_admins.

      %p To see all the current authorization groups and their members:

      %pre
        %code
          :preserve
             You: Lita auth list
            Lita: karma_admins: You

      %p In the add and remove commands, the user can be specified by their unique ID, their display name, or their "mention name," on chat services that have such a user property.
